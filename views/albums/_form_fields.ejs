<style></style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/color-thief/2.3.0/color-thief.umd.js"></script>
<script>
    var tempToken = "<%=token%>";
//     const imageUrlToBase64 = async (url) => {
//     const data = await fetch(url,
//         {
//             method: "get",
//             mode: "no-cors"
//         }
//     )
//     const blob = await data.blob();
//     const reader = new FileReader();
//     reader.readAsDataURL(blob);
//     reader.onload = async () => {
//         const base64data = reader.result;
//         return await base64data
//     }

  
    
// }
// console.log( imageUrlToBase64("https://img.youtube.com/vi/BTWPDboW38o/hq720.jpg"))
console.log("hello")

function getSecondPart(str) {
    var mySubString

    if(str.indexOf("https://youtu.be/") !== -1)
    {
        mySubString = str.substring(
            str.lastIndexOf("/") + 1, 
            str.indexOf("?")
        );
    }
    
    else if(str.indexOf("&") !== -1)
    {
        mySubString = str.substring(
            str.indexOf("=") + 1, 
            str.indexOf("&")
        );
    }

    else
    {
        mySubString = str.split('=')[1];
    }
    return mySubString;
}
    // var newImage = document.createElement('img')
    // newImage.style.display = "none"
    // document.body.appendChild(newImage);


    const colorThief = new ColorThief();
   // const img = document.querySelector('img');

   function chooseSongFAKE(id, results)
{
    var song = results.tracks.items[id]
    var containerDiv = document.getElementById("container")
    containerDiv.replaceChildren()


    var songDiv = document.createElement("div")
        songDiv.style.width = "900px"
        songDiv.style.height = "100px"


        var songImage = document.createElement("img")
        songImage.src = song.album.images[0].url
        songImage.style.height = "100px"
        songImage.style.width = "100px"
        songImage.style.float = "left"

        songDiv.appendChild(songImage)

        var titleP = document.createElement("p")
        titleP.innerHTML = song.name
        titleP.style.color = "rgb(255,255, 255)"
        var artistP = document.createElement("p")
        artistP.innerHTML = song.artists[0].name

        var infoDiv = document.createElement("div")
        infoDiv.appendChild(titleP)
        infoDiv.appendChild(artistP)
        infoDiv.style.margin= " auto 0px auto 20px "

    //     position:relative;
    // top:-2px;
        // infoDiv.style.position = "relative"
        // infoDiv.style.top = "-2px"
        //infoDiv.style.display = "inline-block"
        //infoDiv.style.marginTop = "-50px"
        infoDiv.style.float = "left"

        songDiv.append(infoDiv)
        songDiv.classList.add("song-item-result")
        containerDiv.appendChild(songDiv)
// <label >Rating</label>
// <input style="width: 40px; margin-bottom: 10px;" type="text" name="rating" value=" "> 
// <br>
// <label>Content</label>

// <br>
// <textarea class = "textA" name="content" rows="4" cols="50"></textarea>

var ratingLabel = document.createElement("label")
ratingLabel.innerHTML = "Rating"
containerDiv.appendChild(ratingLabel)

var inputElement = document.createElement("input")
inputElement.style.width = "40px"
inputElement.style.marginBottom = "10px"
inputElement.type = "text"
inputElement.name = "rating"
inputElement.value = ""
inputElement.id = "rating-input"
containerDiv.appendChild(inputElement)

var breakElement = document.createElement("br")
containerDiv.appendChild(breakElement)

var contentLabel = document.createElement("label")
contentLabel.innerHTML = "Content"
containerDiv.appendChild(contentLabel)

var newBreak = document.createElement("br")
containerDiv.appendChild(newBreak)

var textArea = document.createElement("textarea")
textArea.classList.add("textA")
textArea.name = "content"
textArea.rows = "4"
textArea.cols = "50"
textArea.id = "text-area"
containerDiv.append(textArea)


// <a href ="/videos">Cancel</a>
//     <button type="submit">Create</button>

var anchor = document.createElement("a")
anchor.href = "/songs"
anchor.innerHTML = "Cancel"
containerDiv.appendChild(anchor)

var newButton = document.createElement("button")
newButton.type = "submit"
newButton.innerHTML = "Create"
newButton.onclick = function() {sendData(song)}
containerDiv.appendChild(newButton)

    console.log(song.name)
}


async function chooseSong(id, results)
{
    var album = results.albums.items[id]
    var containerDiv = document.getElementById("sub-div")
    containerDiv.replaceChildren()

    var anotherDiv = document.createElement('div')
    containerDiv.appendChild(anotherDiv)


    var thisLink = document.getElementById("enter-link")
   // console.log(vid)
    //<iframe width="560" height="315" src="https://www.youtube.com/embed/?si=zFv2_59A4Zgvz29U&autoplay=1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
    var songImage = document.createElement("img")
        songImage.src = album.images[0].url
        songImage.style.height = "200px"
        songImage.style.width = "200px"
        anotherDiv.appendChild(songImage)
    // newIframe.src = "https://www.youtube.com/embed/"+getSecondPart(vid)+"?si=zFv2_59A4Zgvz29U&autoplay=1"
    // newIframe.width = "560"
    // newIframe.height ="315"
    // newIframe.frameborder = "0"
    // newIframe.allowFullscreen = true
    // newIframe.style.display = "inline-block"
    // containerDiv.appendChild(newIframe)


    var formDiv = document.createElement('div')
    formDiv.style.display = "inline-block"

    formDiv.style.height = "100%"
    formDiv.style.marginLeft = "20px"
    anotherDiv.appendChild(formDiv)

    var starDiv = document.createElement('div')
    starDiv.style.textAlign = "center"
    formDiv.append(starDiv)

    var star1 = document.createElement('img')
    star1.src = "/empty.svg"
    star1.style.width = "50px"
    star1.className = "star"
    starDiv.append(star1)
    star1.onclick = function() {gfg(1)}

    var star2 = document.createElement('img')
    star2.src = "/empty.svg"
    star2.style.width = "50px"
    star2.className = "star"
    starDiv.append(star2)
    star2.onclick = function() {gfg(2)}


    var star3 = document.createElement('img')
    star3.src = "/empty.svg"
    star3.style.width = "50px"
    star3.className = "star"
    starDiv.append(star3)
    star3.onclick = function() {gfg(3)}
    
    var star4 = document.createElement('img')
    star4.src = "/empty.svg"
    star4.style.width = "50px"
    star4.className = "star"
    starDiv.append(star4)
    star4.onclick = function() {gfg(4)}


    var star5 = document.createElement('img')
    star5.src = "/empty.svg"
    star5.style.width = "50px"
    star5.className = "star"
    starDiv.append(star5)
    star5.onclick = function() {gfg(5)}

    var newTA = document.createElement("textarea")
    formDiv.append(newTA)
    newTA.classList.add("textA")
    newTA.name = "content"
    newTA.rows = "7"
    newTA.cols = "50"
    newTA.id = "text-area"
    newTA.style.marginTop = "20px"


    var hiddenInput = document.createElement("input")
    hiddenInput.type = "hidden"
    hiddenInput.id = "hidden-data"
    formDiv.append(hiddenInput)

    var newButton = document.createElement("button")
    newButton.style.display = "block"
    newButton.style.width = "100px"
    newButton.style.height = "50px"
    newButton.innerHTML = "Create"
    formDiv.append(newButton)

    newButton.onclick = function() {sendData(album)}



}





  
async function sendData(s)
{
  //getPreviewURL(s.id)
  var album = {title: s.name, spotifyID: s.id, artist: s.artists[0].name, image: s.images[0].url}
    var rting = document.getElementById("hidden-data")
    var txarea = document.getElementById("text-area")
    console.log(rting.value)
    try{
        
        var fr = await fetch("/albums", {
        method: "POST",
        redirect: 'follow',
        headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
        body: JSON.stringify({
            rating: rting.value,
            content: txarea.value,
            album: album
        })
    })

    if(fr.redirected)
    {
        window.location.href = fr.url;
    }
    }

    catch(e)
    {
        console.log(e)
    }

}

let stars = 
    document.getElementsByClassName("star");
let output = 
    document.getElementById("hidden-data");
 
// Funtion to update rating
function gfg(n) {
    output =  document.getElementById("hidden-data");
    remove();
    console.log(stars)
    console.log(n)
    for (let i = 0; i < n; i++) {

        stars[i].src = "/star.svg"
    }
    output.value = n.toString()
    //output.innerText = "Rating is: " + n + "/5";
}
 
// To remove the pre-applied styling
function remove() {
    let i = 0;
    while (i < 5) {
         stars[i].src = "/empty.svg"
        i++;
    }
}

async function updateToken()
{
    try{
      //make post request to SPOTIFY API for access token, sending relavent info
      const token_url = 'https://accounts.spotify.com/api/token';
      //const data = qs.stringify({'grant_type':'client_credentials'});
      data = "grant_type=client_credentials&client_id=dc276981aa7543689c8bbd74979846ce&client_secret=c058d32f7ada4598926d803f3024ce95"
  
      const response = await fetch(token_url, {
        method: 'post',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded' 
        },
        body: data
      });

    //   const response = await axios.post(token_url, data, {
    //     headers: { 
    //       'Content-Type': 'application/x-www-form-urlencoded' 
    //     }
    //   })
      //return access token
      console.log("HEEEEEEEEEEEEERE")
      var resJson = await response.json()
      console.log(resJson.access_token)


      try{
        await fetch("/albums/update-token", {
            method: "POST",
            headers: {
                      'Accept': 'application/json',
        'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                newToken: resJson.access_token
        })
        })
      }
      catch(e)
      {
        console.log(e)
      }

      return await resJson.access_token;
      //consawole.log(response.data.access_token);   
    }


    catch(error){
      //on fail, log the error in console
      console.log("BROKe")
      console.log(error);
    }
  }


  
async function sendRequest(value)
    {
        console.log("change")
        // try{

        // console.log(value)
        // const response = await fetch("/songs/search?title="+value, {method: "GET"})
        // const songs = await response.json()
        // //console.log(songs.info)
        // return response
        // }
        // catch(e){
        //     console.log(e)
        // }
        var songResults
        if(value != "")
        {

        try{

                if(value != "")
                {
        console.log("search: " + value)


    //     const response = await fetch('https://api.spotify.com/v1/search?q=n&type=track', {
    //     method: 'GET',
    //     headers: {
    //         "Authorization": 'Bearer BQBw6wscbn5otWn_zZgZd_GNVu2Vji4wDiyDl8_ed7CJ-jjXvF9-7rai54Ox57VGieZbn4yo8M02jjZ1nYuDug4QQMr98Qcy4Og3NbZL1lIGAJfbbiA'
    //     }
    //   });

                    console.log("trying")
      const response = await fetch('https://api.spotify.com/v1/search?q='+value+'&type=album', {
        method: 'GET',
        headers: {
            "Authorization": 'Bearer '+ tempToken
        }
      });

      if(!response.ok)
      {
        throw new Error('Something went wrong');
      }
      songResults = await response.json()
      console.log(songResults)
      //console.log(songResults.tracks)
    }
    }

    catch(e){
        console.log("going through here")
console.log(e)
const newKey = await updateToken()
console.log("top")
console.log(newKey)
console.log("bottom")
const response = await fetch('https://api.spotify.com/v1/search?q='+value+'&type=album', {
        method: 'GET',
        headers: {
            "Authorization": 'Bearer ' + newKey
        }
      });

      songResults = await response.json()
      console.log(songResults)

    }



    try{
    //var newDiv = document.createElement("div")
    var resultDiv = document.getElementById("results-div")
    //resultDiv.remove()
    //newDiv.id = "results"

    var newChildren = []
    var tempDiv = document.createElement('div')
    resultDiv.replaceChildren()
    var songId = 0;
    songResults.albums.items.forEach(song => {

        var songDiv = document.createElement("div")
        songDiv.style.width = "100%"
        songDiv.style.height = "100px"


        var songImage = document.createElement("img")
        songImage.src = song.images[0].url
        songImage.style.height = "100px"
        songImage.style.width = "100px"
        songImage.style.float = "left"

        songDiv.appendChild(songImage)

        var titleP = document.createElement("p")
        titleP.innerHTML = song.name
        titleP.style.color = "rgb(255,255, 255)"
        var artistP = document.createElement("p")
        artistP.innerHTML = song.artists[0].name

        var infoDiv = document.createElement("div")
        infoDiv.appendChild(titleP)
        infoDiv.appendChild(artistP)
        infoDiv.style.margin= " auto 0px auto 20px "

    //     position:relative;
    // top:-2px;
        // infoDiv.style.position = "relative"
        // infoDiv.style.top = "-2px"
        //infoDiv.style.display = "inline-block"
        //infoDiv.style.marginTop = "-50px"
        infoDiv.style.float = "left"

        songDiv.append(infoDiv)
        songDiv.classList.add("song-item-result")
        songDiv.id = songId.toString();
        resultDiv.append(songDiv)

        songDiv.onclick = function() {chooseSong(this.id, songResults)}
        songId++
    })

    //document.body.appendChild(newDiv)
    //console.log(tempDiv.children)
    //resultDiv.children = tempDiv.children
    }
    catch(e)
    {
        console.log(e)
    }
        }


    }
</script>

<!-- <label>Link</label>
<input style="margin-bottom: 10px;" id="link-input" class="form" type="text" name="name" value="
<br> 
<label >Rating</label>
<input style="width: 40px; margin-bottom: 10px;" id="rating-input" type="text" name="rating" value=""> 
<br>
<label>Content</label>

<input type="hidden" name="color" value="">
<br>
<textarea class = "textA" name="content" rows="4" cols="50" id="text-area"></textarea> -->


<style>
    #sub-div
    {
        /* margin: auto; */
        display: flex;
        /* background-color: black;
        width: 1000px;
        height: 350px; */
       /* align-items: center; */
       flex-direction: column;
       margin-top: 50px;
       
    }
    .form-container
    {
        display: flex;
  
  height: 100%; 
    }

    .search-holder
    {

    }

    #results-div
    {
        width: 80%;
        height: 700px;
        overflow-y:auto;
        /* margin: 0px auto 0px auto */
    }
    .song-item-result:hover
    {
        background-color: rgb(83, 83, 83);
    }

</style>
<div class="box">


<div id="sub-div">
    <div class="search-holder">
<input id="enter-link" type ="text" name="name" placeholder="Search song from Spotify" onkeyup="sendRequest(this.value)" style="border-radius: 17.5px; border: none; font-size: 20px; background-color:rgb(31, 31, 31); height: 40px; caret-color: white; color: white; padding-left: 10px;" size="50" >
<a href ="/videos">Cancel</a>
<button onclick="chooseVideo(document.getElementById('enter-link').value)">Create</button>

</div>
<div id = "results-div">

</div>

</div>

</div>