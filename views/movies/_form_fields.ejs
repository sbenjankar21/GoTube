<style></style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/color-thief/2.3.0/color-thief.umd.js"></script>
<script>

    // get the spotify api token
    var tempToken = "<%=token%>";

    // function to get songs from spotify api
    async function sendRequest(value)
    {
        // declare movie results
        var movieResults

        // make sure input isn't empty
        if(value != "")
        {

            // try this
            try
            {
                // make sure its not empty... again?
                if(value != "")
                {

                    // make a fetch request to tmdb api
                    const response = await fetch('https://api.themoviedb.org/3/search/movie?query='+value+'&api_key=e1ebcaed511d642466017433aa7c2ec5', {
                    method: 'GET',
                    headers: {}
                    });

                    // if theres an error throw an error
                    if(!response.ok)
                    {
                        throw new Error('Something went wrong');
                    }

                    // instantiate the movieResults with the api response
                    movieResults = await response.json()

                }
            }

            // on error
            catch(e)
            {
                console.log(e)
            }

            // try this
            try
            {
                // get the result div element
                var resultDiv = document.getElementById("results-div")

                // declare the new children
                var newChildren = []

                // empty out the result div
                resultDiv.replaceChildren()

                // movie id for each movie
                var movieId = 0;

                // for each result in the movie result do this function
                movieResults.results.forEach(movie => {

                    // create an image and sets its attributes
                    var movieImage = document.createElement("img")
                    movieImage.src = "https://image.tmdb.org/t/p/original"+movie.poster_path
                    movieImage.style.height = "300px"
                    movieImage.style.width = "200px"
                    movieImage.style.margin = "0px 20px 20px 0px"
                    movieImage.classList.add("movie-poster")

                    // add the image to the result div
                    resultDiv.appendChild(movieImage)

                    // set the images id to the id
                    movieImage.id = movieId.toString();

                    // add an onclick function, pass in the posters id and all the results
                    movieImage.onclick = function() {chooseMovie(this.id, movieResults)}

                    //increase the id
                    movieId++
                })

            }


            catch(e)
            {
                console.log(e)
            }

        }

    }

    // create a new color thief
    const colorThief = new ColorThief();

    async function chooseMovie(id, results)
    {
        // get the specific movie chosen
        var movie = results.results[id]

        // get the sub-div dib
        var containerDiv = document.getElementById("sub-div")

        // empty the div out
        containerDiv.replaceChildren()

        // create another div
        var anotherDiv = document.createElement('div')

        // add the new div to the sub div and assign its atrributes
        containerDiv.appendChild(anotherDiv)
        anotherDiv.style.width = "800px"
        anotherDiv.style.flex = "0 0 auto"

        // create new image and assign its attributes
        var songImage = document.createElement("img")
        songImage.src = "https://image.tmdb.org/t/p/original"+movie.poster_path
        songImage.style.width = "200px"

        // add the songImage to the div
        anotherDiv.appendChild(songImage)

        //
        var formDiv = document.createElement('div')
        formDiv.style.display = "inline-block"

        formDiv.style.height = "100%"
        formDiv.style.marginLeft = "20px"
        anotherDiv.appendChild(formDiv)

        var starDiv = document.createElement('div')
        starDiv.style.textAlign = "center"
        formDiv.append(starDiv)

        var star1 = document.createElement('img')
        star1.src = "/empty.svg"
        star1.style.width = "50px"
        star1.className = "star"
        starDiv.append(star1)
        star1.onclick = function() {gfg(1)}

        var star2 = document.createElement('img')
        star2.src = "/empty.svg"
        star2.style.width = "50px"
        star2.className = "star"
        starDiv.append(star2)
        star2.onclick = function() {gfg(2)}


        var star3 = document.createElement('img')
        star3.src = "/empty.svg"
        star3.style.width = "50px"
        star3.className = "star"
        starDiv.append(star3)
        star3.onclick = function() {gfg(3)}
        
        var star4 = document.createElement('img')
        star4.src = "/empty.svg"
        star4.style.width = "50px"
        star4.className = "star"
        starDiv.append(star4)
        star4.onclick = function() {gfg(4)}


        var star5 = document.createElement('img')
        star5.src = "/empty.svg"
        star5.style.width = "50px"
        star5.className = "star"
        starDiv.append(star5)
        star5.onclick = function() {gfg(5)}

        var newTA = document.createElement("textarea")
        formDiv.append(newTA)
        newTA.classList.add("textA")
        newTA.name = "content"
        newTA.rows = "7"
        newTA.cols = "50"
        newTA.id = "text-area"
        newTA.style.marginTop = "20px"


        var hiddenInput = document.createElement("input")
        hiddenInput.type = "hidden"
        hiddenInput.id = "hidden-data"
        formDiv.append(hiddenInput)

        var newButton = document.createElement("button")
        newButton.style.display = "block"
        newButton.style.width = "100px"
        newButton.style.height = "50px"
        newButton.innerHTML = "Create"
        formDiv.append(newButton)

        newButton.onclick = function() {sendData(movie)}



    }





  
async function sendData(s)
{

    var rting = document.getElementById("hidden-data")
    var txarea = document.getElementById("text-area")
    console.log(rting.value)
    try{
        
        var fr = await fetch("/movies", {
        method: "POST",
        redirect: 'follow',
        headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
        body: JSON.stringify({
            rating: rting.value,
            content: txarea.value,
            movie: s
        })
    })

    if(fr.redirected)
    {
        window.location.href = fr.url;
    }
    }

    catch(e)
    {
        console.log(e)
    }

}


let stars = 
    document.getElementsByClassName("star");
let output = 
    document.getElementById("hidden-data");
 
// Funtion to update rating
function gfg(n) {
    output =  document.getElementById("hidden-data");
    remove();
    console.log(stars)
    console.log(n)
    for (let i = 0; i < n; i++) {

        stars[i].src = "/star.svg"
    }
    output.value = n.toString()
    //output.innerText = "Rating is: " + n + "/5";
}
 
// To remove the pre-applied styling
function remove() {
    let i = 0;
    while (i < 5) {
         stars[i].src = "/empty.svg"
        i++;
    }
}
async function updateToken()
{
    try{
      //make post request to SPOTIFY API for access token, sending relavent info
      const token_url = 'https://accounts.spotify.com/api/token';
      //const data = qs.stringify({'grant_type':'client_credentials'});
      data = "grant_type=client_credentials&client_id=dc276981aa7543689c8bbd74979846ce&client_secret=c058d32f7ada4598926d803f3024ce95"
  
      const response = await fetch(token_url, {
        method: 'post',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded' 
        },
        body: data
      });

    //   const response = await axios.post(token_url, data, {
    //     headers: { 
    //       'Content-Type': 'application/x-www-form-urlencoded' 
    //     }
    //   })
      //return access token
      console.log("HEEEEEEEEEEEEERE")
      var resJson = await response.json()
      console.log(resJson.access_token)


      try{
        await fetch("/songs/update-token", {
            method: "POST",
            headers: {
                      'Accept': 'application/json',
        'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                newToken: resJson.access_token
        })
        })
      }
      catch(e)
      {
        console.log(e)
      }

      return await response.body.access_token;
      //consawole.log(response.data.access_token);   
    }


    catch(error){
      //on fail, log the error in console
      console.log("BROKe")
      console.log(error);
    }
  }

</script>

<!-- <label>Link</label>
<input style="margin-bottom: 10px;" id="link-input" class="form" type="text" name="name" value="
<br> 
<label >Rating</label>
<input style="width: 40px; margin-bottom: 10px;" id="rating-input" type="text" name="rating" value=""> 
<br>
<label>Content</label>

<input type="hidden" name="color" value="">
<br>
<textarea class = "textA" name="content" rows="4" cols="50" id="text-area"></textarea> -->


<style>
    #sub-div
    {
        /* margin: auto; */
        display: flex;
        /* background-color: black;
        width: 1000px;
        height: 350px; */
       /* align-items: center; */
       flex-direction: column;
       margin-top: 50px;
       width: 100%;
        align-items: center;
       justify-content: center;
    }
    .form-container
    {
        display: flex;
  
  height: 100%; 
    }

    .search-holder
    {

    }

    #results-div
    {
        width: 100%;
        /* height: 900px; */
        
    }
    .song-item-result:hover
    {
        background-color: rgb(83, 83, 83);
    }

    .movie-poster
    {
      transition: transform 0.2s;
    }

    .movie-poster:hover
    {
      transform: scale(1.1);

    }

</style>
<div class="box">


<div id="sub-div">
    <div class="search-holder">
<input id="enter-link" type ="text" name="name" placeholder="Search movie" onkeyup="sendRequest(this.value)" style="border-radius: 17.5px; border: none; font-size: 20px; background-color:rgb(31, 31, 31); height: 40px; caret-color: white; color: white; padding-left: 10px;" size="50" >
<a href ="/videos">Cancel</a>
<button onclick="chooseVideo(document.getElementById('enter-link').value)">Create</button>

</div>
<div id = "results-div">

</div>

</div>

</div>