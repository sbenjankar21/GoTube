

<style>

    /* body {
        animation: fadeInAnimation ease 3s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }
    @keyframes fadeInAnimation {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
     */
    
    #overview-container
    {    animation: fadeInAnimation ease 3s;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    
       background-color: rgb(54, 54, 54); /*ignore */
       display:flex
    
       
    }
    
    @keyframes fadeInAnimation {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
    .video-div
    {
      /* float: left; */
      padding-left: 90px;
      padding-top: 50px;
      width: 20%;
    }
    .reviews-div
    {
      /* float: left; */
       /* display: flex;  */
      flex-grow: 1;
      justify-content: center;
    }
    
    .review-item-page
        {
    
          /* margin: auto; */
          margin: 25px auto 0px auto;
          display:block; 
          width: 75%;
          height: 270px;
          padding: 10px;
          background-color: rgb(10, 10, 10);
          /* margin-top: 10px; */
          /* transition: background-color 0.2s; */
          transition: transform 0.2s;
        }
    
    
    
     
       .review-item-page:hover
        {
          transform: scale(1.1);
          /* background-color: rgb(0, 90, 0); */
    
        }
    
    
    
    
    
    
    
        .review-username
        {
          font-size: 20px;
          float: left;
          margin-top: 10px;
          text-decoration: none;
          color: white;
        }
    
        .review-profile-image
        {
          border-radius: 50%;
          float: left;
          margin-left: 30px;
          margin-right: 15px;
          width: 50px;
        }
        .name-profile-holder
        {
          margin-top: 20px;
          width: 100%;
          height: 55px;
        }
    
        .star-containera
        {
          padding-left: 25px;
        }
        .star-one{
          /* float: left; */
        }
        .review-content
        {
          margin-left: 30px;
        }
    
        .average-stars-container
        {
          /* display: inline; */
          display: flex;
          height: 50px;
          
        }
    
        .average-star-amount
        {
          margin-right: 10px;
          color: white;
        }
        .average-star-total
        {
          margin-left: 10px;
          color: white;
        }
    
        .star-svg
        {
    
        }
        .favorite-song-holder
        {
          margin: 0px auto 0px auto;
          display: flex;
          justify-content: center;
          margin-bottom: 50px;
          width: 80%;
        }
    
        .favorite-movie-holder
        {
          margin: 0px auto 0px auto;
          display: flex;
          justify-content: center;
          margin-bottom: 50px;
          width: 80%;
        }
    
        .favorite-video-holder
        {
          margin: 0px auto 0px auto;
          display: flex;
          justify-content: center;
          margin-bottom: 50px;
          width: 80%;
        }
    
    
        /* .favorite-song-item
        {
          margin: auto auto;
          background-color: rgb(176, 72, 128);
        } */
    
    
        .favorite-song-item
        {
          margin: auto auto;
          width: 200px;
          height: 270px;
          padding: 10px;
          background-color: rgb(10, 10, 10);
          display:inline-block;
          transition: transform 0.2s;
        }
    
        .favorite-movie-item
        {
          margin: auto auto;
          width: 200px;
     
          padding: 10px;
          background-color: rgb(10, 10, 10);
          display:inline-block;
          transition: transform 0.2s;
        }
    
    
          .favorite-song-item:hover
          {
            transform: scale(1.1);
          }
    
          /* .song-img
        {
          display: inline-block;
          position: relative;
          margin-top: 10px;
        }
    
        .vInfo
        {
          height: 5px;
          margin-top: 10px;
          margin-bottom:  10px;
          font-size: 15px;
          color: rgb(245, 245, 245);
    
        } */

        .account-setting
        {
            display: flex;
            flex-direction: column; 
            width: 20%;
        }
        .favorite-setting
        {
            
            width: 80%;
        }
        .all-settings
        {
            display: flex;
        }

        .favorite-video-holder
    {
      margin: 0px auto 0px auto;
      display: flex;
      justify-content: center;
      margin-bottom: 50px;
      width: 80%;
    }


    /* .favorite-song-item
    {
      margin: auto auto;
      background-color: rgb(176, 72, 128);
    } */


    .favorite-song-item
    {
      margin: auto auto;
      width: 200px;
      height: 270px;
      padding: 10px;
      background-color: rgb(10, 10, 10);
      display:inline-block;
      transition: transform 0.2s;
    }

    .favorite-song-null
    {
      margin: auto auto;
      width: 200px;
      height: 270px;
      padding: 10px;
      background-color: rgb(10, 10, 10);
      display:inline-block;
      transition: transform 0.2s;
      cursor: pointer;
    }

    #pop-up {position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    background-color: rgba(0, 0, 0, 0.85);
    display: none;
}

#pop-up-movie {position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    background-color: rgba(0, 0, 0, 0.85);
    display: none;
}
#sub-div
    {
        /* margin: auto; */
        display: flex;
        /* background-color: black;
        width: 1000px;
        height: 350px; */
       /* align-items: center; */
       flex-direction: column;
       margin-top: 50px;
       
    }
    .form-container
    {
        display: flex;
  
  height: 100%; 
    }

    .search-holder
    {
        width: fit-content;
        margin: 0px auto 0px auto;
    }

    #results-div
    {
        width: 60%;
        height: 600px;
        overflow-y:auto;
         margin: 0px auto 0px auto 
    }

    #results-div-movie
    {
        width: 60%;
        height: 600px;
        overflow-y:auto;
         margin: 0px auto 0px auto 
    }
    .song-item-result:hover
    {
        background-color: rgb(83, 83, 83);
    }

    .favorite-movie-null
    {
      margin: auto auto;
      width: 200px;
      height: 300px;
      padding: 10px;
      background-color: rgb(10, 10, 10);
      display:inline-block;
      transition: transform 0.2s;
      cursor: pointer;
    }
    </style>
<script>
  var tempToken = "<%=token%>";
  var songHolderChosen = -1;
  var movieHolderChosen = -1;
  var songsToSend = [null, null, null, null, null]
  var moviesToSend = [null, null, null, null, null]

var k = 0;

<% for(var i = 0; i < user.favoriteSongs.length; i++) {%>
  <% if(user.favoriteSongs[i] !== null) {%>
  var songJson = {title: "<%=user.favoriteSongs[i].title%>", id: "<%= user.favoriteSongs[i].spotifyId%>", artist: "<%= user.favoriteSongs[i].artist %>", imageAddress: "<%= user.favoriteSongs[i].imageAddress %>"}
  console.log(songJson)
  songsToSend[k] = songJson
  <%} else{ %>
    songsToSend[k] = null
  <%}%>
  k++;
<%}%>

k = 0
<% for(var i = 0; i < user.favoriteMovies.length; i++) {%>
  <% if(user.favoriteMovies[i] !== null) {%>
  var movieJson = {id: "<%= user.favoriteMovies[i].tmdbID%>", imageAddress: "<%= user.favoriteMovies[i].imageAddress %>"}
  console.log(songJson)
  moviesToSend[k] = movieJson
  <%} else{ %>
    moviesToSend[k] = null
  <%}%>
  k++;
<%}%>

// var songJson = {title: song.name, id: song.id, artist: song.artists[0].name, imageAddress: song.album.images[0].url,}




// songsToSend[parseInt(songHolderChosen)] = songJson;


//  var testJson = [{name: "forn"},{name: "ggg"},null]

// for(var i = 0; i < testJson.length; i++)
// {
//   console.log(JSON.stringify(testJson[i]))
//    testJson[i] = JSON.stringify(testJson[i])
// }

//  var string = testJson.toString()
//  console.log(string)
//  console.log(string.split(","))

//  var backToArray = string.split(",")

//  console.log(JSON.parse(backToArray[2]))

function convertJsons(jsonARRAY)
{

  console.log("WTFFFF" + jsonARRAY.length)
  for(var i = 0; i < jsonARRAY.length; i++)
  {
    jsonARRAY[i] = JSON.stringify(jsonARRAY[i])
  }
  console.log("WTFFFF" + jsonARRAY.length)
  return jsonARRAY
}

function customToString(array)
{
  console.log("in here" + array.length)
  var temp = ""
  for(var i = 0; i < array.length; i++)
  {

    temp = temp.concat(array[i])
    if(i != array.length-1)
    {
    temp = temp.concat("SHRAWAN")
    }
    console.log("HELLO?")
    console.log(temp)
    console.log("goodBYE")
  }

  return temp;
}



  function searcb(id)
  {
    songHolderChosen = id
    var popUp = document.getElementById("pop-up");
    popUp.style.display = "block";
  }

  function searcbMovie(id)
  {
    movieHolderChosen = id.substring(6,7)
    console.log(id)
    console.log(movieHolderChosen)
    var popUp = document.getElementById("pop-up-movie");
    popUp.style.display = "block";
  }

  
async function chooseSong(id, results)
{
  var song = results.tracks.items[id]
  
  var songJson = {title: song.name, id: song.id, artist: song.artists[0].name, imageAddress: song.album.images[0].url,}




  songsToSend[parseInt(songHolderChosen)] = songJson;
  console.log(songsToSend)

  var popUp = document.getElementById("pop-up");
  popUp.style.display = "none";

  var holder = document.getElementById(songHolderChosen.toString())
  var newImage = document.createElement("img")
  newImage.className = "song-img"
  newImage.style.width = "200px"
  newImage.src = song.album.images[0].url
  holder.appendChild(newImage)


  var title = document.createElement("p")
  title.innerHTML = song.name
  title.className = "vInfo"
  holder.appendChild(title)

  var artist = document.createElement("p")
  artist.innerHTML = song.artists[0].name
  artist.style.margin = "5px 0px 0px 0px"
holder.appendChild(artist)


}

async function chooseMovie(id, results)
{
  var movie = results.results[id]
  
  var movieJson = {title: movie.title, id: movie.id, imageAddress: movie.poster_path,}




  moviesToSend[parseInt(movieHolderChosen)] = movieJson;
  console.log(moviesToSend)

  var popUp = document.getElementById("pop-up-movie");
  popUp.style.display = "none";

  var holder = document.getElementById("movie-"+movieHolderChosen.toString())
  var newImage = document.createElement("img")
  newImage.className = "song-img"
  newImage.style.width = "200px"
  newImage.src = "https://image.tmdb.org/t/p/original"+movie.poster_path
  holder.appendChild(newImage)


//   var title = document.createElement("p")
//   title.innerHTML = song.name
//   title.className = "vInfo"
//   holder.appendChild(title)

//   var artist = document.createElement("p")
//   artist.innerHTML = song.artists[0].name
//   artist.style.margin = "5px 0px 0px 0px"
// holder.appendChild(artist)


}





async function sendData()
{
  try{
        
        var fr = await fetch("/settings", {
        method: "POST",
        redirect: 'follow',
        headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
        body: JSON.stringify({
            songs: songsToSend,
            movies: moviesToSend

        })
    })

    
    }

    catch(e)
    {
        console.log(e)
    }
}


async function updateToken()
{
  try{
    //make post request to SPOTIFY API for access token, sending relavent info
    const token_url = 'https://accounts.spotify.com/api/token';
    //const data = qs.stringify({'grant_type':'client_credentials'});
    data = "grant_type=client_credentials&client_id=dc276981aa7543689c8bbd74979846ce&client_secret=c058d32f7ada4598926d803f3024ce95"

    const response = await fetch(token_url, {
      method: 'post',
      headers: {
          'Content-Type': 'application/x-www-form-urlencoded' 
      },
      body: data
    });

  //   const response = await axios.post(token_url, data, {
  //     headers: { 
  //       'Content-Type': 'application/x-www-form-urlencoded' 
  //     }
  //   })
    //return access token
    console.log("HEEEEEEEEEEEEERE")
    var resJson = await response.json()
    console.log(resJson.access_token)


    try{
      await fetch("/settings/update-token", {
          method: "POST",
          headers: {
                    'Accept': 'application/json',
      'Content-Type': 'application/json'
          },
          body: JSON.stringify({
              newToken: resJson.access_token
      })
      })
    }
    catch(e)
    {
      console.log(e)
    }

    return await response.body.access_token;
    //consawole.log(response.data.access_token);   
  }


  catch(error){
    //on fail, log the error in console
    console.log("BROKe")
    console.log(error);
  }
}
  async function sendRequest(value)
  {
      console.log("change")
      var songResults
      if(value != "")
      {

      try{

              if(value != "")
              {
      console.log("search: " + value)


  //     const response = await fetch('https://api.spotify.com/v1/search?q=n&type=track', {
  //     method: 'GET',
  //     headers: {
  //         "Authorization": 'Bearer BQBw6wscbn5otWn_zZgZd_GNVu2Vji4wDiyDl8_ed7CJ-jjXvF9-7rai54Ox57VGieZbn4yo8M02jjZ1nYuDug4QQMr98Qcy4Og3NbZL1lIGAJfbbiA'
  //     }
  //   });

                  console.log("trying")
    const response = await fetch('https://api.spotify.com/v1/search?q='+value+'&type=track', {
      method: 'GET',
      headers: {
          "Authorization": 'Bearer '+ tempToken
      }
    });

    if(!response.ok)
    {
      throw new Error('Something went wrong');
    }
    songResults = await response.json()
    //console.log(songResults.tracks)
  }
  }

  catch(e){
      console.log("going through here")
console.log(e)
const newKey = await updateToken()
console.log("top")
console.log(newKey)
console.log("bottom")
const response = await fetch('https://api.spotify.com/v1/search?q='+value+'&type=track', {
      method: 'GET',
      headers: {
          "Authorization": 'Bearer ' + newKey
      }
    });

    songResults = await response.json()
    console.log(songResults)

  }



  try{
  //var newDiv = document.createElement("div")
  var resultDiv = document.getElementById("results-div")
  //resultDiv.remove()
  //newDiv.id = "results"

  var newChildren = []
  var tempDiv = document.createElement('div')
  resultDiv.replaceChildren()
  var songId = 0;
  songResults.tracks.items.forEach(song => {

      var songDiv = document.createElement("div")
      songDiv.style.width = "100%"
      songDiv.style.height = "100px"


      var songImage = document.createElement("img")
      songImage.src = song.album.images[0].url
      songImage.style.height = "100px"
      songImage.style.width = "100px"
      songImage.style.float = "left"

      songDiv.appendChild(songImage)

      var titleP = document.createElement("p")
      titleP.innerHTML = song.name
      titleP.style.color = "rgb(255,255, 255)"
      var artistP = document.createElement("p")
      artistP.innerHTML = song.artists[0].name

      var infoDiv = document.createElement("div")
      infoDiv.appendChild(titleP)
      infoDiv.appendChild(artistP)
      infoDiv.style.margin= " auto 0px auto 20px "

  //     position:relative;
  // top:-2px;
      // infoDiv.style.position = "relative"
      // infoDiv.style.top = "-2px"
      //infoDiv.style.display = "inline-block"
      //infoDiv.style.marginTop = "-50px"
      infoDiv.style.float = "left"

      songDiv.append(infoDiv)
      songDiv.classList.add("song-item-result")
      songDiv.id = songId.toString();
      resultDiv.append(songDiv)

      songDiv.onclick = function() {chooseSong(this.id, songResults)}
      songId++
  })

  //document.body.appendChild(newDiv)
  //console.log(tempDiv.children)
  //resultDiv.children = tempDiv.children
  }
  catch(e)
  {
      console.log(e)
  }
      }


  }

      // function to get songs from spotify api
      async function sendRequestMovie(value)
    {
        // declare movie results
        var movieResults

        // make sure input isn't empty
        if(value != "")
        {

            // try this
            try
            {
                // make sure its not empty... again?
                if(value != "")
                {

                    // make a fetch request to tmdb api
                    const response = await fetch('https://api.themoviedb.org/3/search/movie?query='+value+'&api_key=e1ebcaed511d642466017433aa7c2ec5', {
                    method: 'GET',
                    headers: {}
                    });

                    // if theres an error throw an error
                    if(!response.ok)
                    {
                        throw new Error('Something went wrong');
                    }

                    // instantiate the movieResults with the api response
                    movieResults = await response.json()

                }
            }

            // on error
            catch(e)
            {
                console.log(e)
            }

            // try this
            try
            {
                // get the result div element
                var resultDiv = document.getElementById("results-div-movie")

                // declare the new children
                var newChildren = []

                // empty out the result div
                resultDiv.replaceChildren()

                // movie id for each movie
                var movieId = 0;

                // for each result in the movie result do this function
                movieResults.results.forEach(movie => {

                    // create an image and sets its attributes
                    var movieImage = document.createElement("img")
                    movieImage.src = "https://image.tmdb.org/t/p/original"+movie.poster_path
                    movieImage.style.height = "300px"
                    movieImage.style.width = "200px"
                    movieImage.style.margin = "0px 20px 20px 0px"
                    movieImage.classList.add("movie-poster")

                    // add the image to the result div
                    resultDiv.appendChild(movieImage)

                    // set the images id to the id
                    movieImage.id = movieId.toString();

                    // add an onclick function, pass in the posters id and all the results
                    movieImage.onclick = function() {chooseMovie(this.id, movieResults)}

                    //increase the id
                    movieId++
                })

            }


            catch(e)
            {
                console.log(e)
            }

        }

    }
</script>
<div class = "all-settings" action="/settings" method="post">
  <div class="account-setting">
  <h1> Account Settings</h1>

 

    <label>Username</label>
    <br>
    <input type="text" value="<%= user.username %>">
    <br>
    <br>
    <label>Email</label>
    <br>
    <input type="text" value="<%= user.email %>">

    <br>
    <br>
    <label>Bio</label>
    <br>
    <textarea <%= user.bio %>></textarea>


</div>

<div class="favorite-setting">
<h1>Favorites</h1>
<br>
<h2> Songs</h2>
<div class="favorite-song-holder"> 

    <% for(var i = 0; i < user.favoriteSongs.length; i++) { %>
        
        <% if(user.favoriteSongs[i] === null) { %>
        
        <div id = <%= i %>; class="favorite-song-null" href = "/songs/9999" onclick="searcb(this.id)">
            
        </div> 
   <% } else {%>
    <a id = <%= i %> class="favorite-song" href = "/songs/9999">
        <img class = "song-img" src="<%= user.favoriteSongs[i].imageAddress%>" alt="Lamp" width="200px">
        <p class = "vInfo" id = "overflo"> <span style ="font-size: 20px; "><%= user.favoriteSongs[i].title %></span><br> <span style="font-size: 12.5px; color:rgb(170, 170, 170)"><%= user.favoriteSongs[i].artist %></span></p>
  </a> 
    <% } %>
   
        
        <% } %>





</div>

<br>
<h2> Movies</h2>
<div class="favorite-movie-holder"> 

    <% for(var i = 0; i < user.favoriteMovies.length; i++) { %>
        
        <% if(user.favoriteMovies[i] === null) { %>
        
        <div id = "movie-<%=i%>"; class="favorite-movie-null" href = "/songs/9999" onclick="searcbMovie(this.id)">
            
        </div> 
   <% } else {%>
    
        <img class = "song-img" src="https://image.tmdb.org/t/p/original<%= user.favoriteMovies[i].imageAddress%>" alt="Lamp" width="200px">
        
 
    <% } %>
   
        
        <% } %>





</div>



</div>
<input id ="myHidden" type="hidden" name = "songs"; value="">

<button onclick="sendData()">Save</button>
</div>

<div id="pop-up">

    

    <div id="sub-div">
        <div class="search-holder">
    <input id="enter-link" type ="text" name="name" placeholder="Search song from Spotify" onkeyup="sendRequest(this.value)" style="border-radius: 17.5px; border: none; font-size: 20px; background-color:rgb(31, 31, 31); height: 40px; caret-color: white; color: white; padding-left: 10px;" size="50" >
    <a href ="/videos">Cancel</a>
    <button onclick="chooseVideo(document.getElementById('enter-link').value)">Create</button>
    
    </div>
    <div id = "results-div">
    
    </div>
    
    </div>
    
</div>

<div id="pop-up-movie">

    

  <div id="sub-div">
      <div class="search-holder">
  <input id="enter-link" type ="text" name="name" placeholder="Search movie" onkeyup="sendRequestMovie(this.value)" style="border-radius: 17.5px; border: none; font-size: 20px; background-color:rgb(31, 31, 31); height: 40px; caret-color: white; color: white; padding-left: 10px;" size="50" >
  <a href ="/videos">Cancel</a>
  <button onclick="chooseVideo(document.getElementById('enter-link').value)">Create</button>
  
  </div>
  <div id = "results-div-movie">
  
  </div>
  
  </div>
  
</div>